=========================================
=       Test `5-text_indentation`       =
=========================================

______________________________________________________

- Seccion to check import, documentation and README  -
______________________________________________________

#1 import function fom the module
    >>> text_indentation = __import__('5-text_indentation').text_indentation

#2 Check docstring module:
    >>> doc_module = __import__("5-text_indentation").__doc__
    >>> len(doc_module.splitlines()) > 4
    True

#3 Check docstring of the function:
    >>> doc_module = __import__("5-text_indentation").text_indentation.__doc__
    >>> len(doc_module.splitlines()) > 2
    True

#4 Check PEP 8 style:
    >>> import os
    >>> os.popen("pep8 5-text_indentation.py").read()
    ''

#5 Check README file:
    >>> current_wd = os.getcwd()
    >>> path_readme = current_wd + "/README.md"
    >>> os.path.exists(path_readme)
    True

______________________________________________________

-      Seccion to check function requirements        -
______________________________________________________

#6 Text must be a string
    >>> text_indentation(1)
    Traceback (most recent call last):
        ...
    TypeError: text must be a string

#7 prints a text with 2 new lines after '.'
    >>> text_indentation("Hola . Mundo")
    Hola .
    <BLANKLINE>
    Mundo

#8 prints a text with 2 new lines after '?'
    >>> text_indentation("Hola ? Mundo")
    Hola ?
    <BLANKLINE>
    Mundo

#9 prints a text with 2 new lines after ':'
    >>> text_indentation("Hola : Mundo")
    Hola :
    <BLANKLINE>
    Mundo

#10 Should be no space at the beginning or at the end of each printed line
    >>> text_indentation("  Hola :?.   Mundo  ")
    Hola :
    <BLANKLINE>
    ?
    <BLANKLINE>
    .
    <BLANKLINE>
    Mundo

______________________________________________________

-      Seccion to check the main of the proyect      -
______________________________________________________

#11
>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit.Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
<BLANKLINE>
Si id dicis, vicimus.
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus.
<BLANKLINE>
Sin aliud quid voles, postea.
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico.
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

______________________________________________________

-            Seccion to check edge cases             -
______________________________________________________


#12 Should be no space at the beginning or at the end of each printed line,
too many spaces between characters
    >>> text_indentation("  Hola :  ?   .    Mundo  ")
    Hola :
    <BLANKLINE>
    ?
    <BLANKLINE>
    .
    <BLANKLINE>
    Mundo

#13 Text must be a string
    >>> text_indentation(None)
    Traceback (most recent call last):
        ...
    TypeError: text must be a string
